const isObjectEmpty=e=>0===Object.keys(e).length;async function singleApi(r,t,b){try{const s=[],n={};var e=Object.keys(r.body).map(async(c,e)=>{const t={},y=[];let a=[],o={};n[c]=null,Object.keys(r.body[c]).map(s=>{if(isObjectEmpty(r.body[c][s]))a.push({});else{if(isObjectEmpty(r.body[c][s])||(o={[s]:r.body[c][s]}),1==r.body[c][s]?.ref_data){var e;let t={};e=Object.keys(r.body[c][s]),t={path:s,select:e},Object.keys(r.body[c][s]).map(e=>{isObjectEmpty(r.body[c][s][e])||(t.match={[e]:r.body[c][s][e]})}),o={},y.push(t)}isObjectEmpty(o)||a.push(o)}t[s]=1});var s=a.filter(e=>0<Object.keys(e).length),s=(0<s.length?a=s:a.splice(1),await b[c].find(...a,t).populate(y));return s});return(await Promise.all(e)).map((e,t)=>{s.push({[Object.keys(n)[t]]:e})}),t.send({data:s,msg:"sucess",status:200})}catch(e){return console.error(e),t.json({err:e,msg:"an error occurred"})}}module.exports={singleApi:singleApi};